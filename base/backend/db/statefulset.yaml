apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
spec:
  replicas: 1
  serviceName: postgres
  updateStrategy:
    type: "RollingUpdate"
    rollingUpdate:
      maxUnavailable: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      terminationGracePeriodSeconds: 60
      containers:
      - name: db
        image: postgres:16.1-alpine3.19
        ports:
        - name: postgres
          containerPort: 5432
        livenessProbe:
          exec:
            command:
            - sh
            - "-c"
            - "pg_isready --username $POSTGRES_USER"
          initialDelaySeconds: 20
          periodSeconds: 10
          failureThreshold: 1
        readinessProbe:
          exec:
            command:
            - sh
            - "-c"
            - "pg_isready --username $POSTGRES_USER"
          initialDelaySeconds: 10
          periodSeconds: 5
        volumeMounts:
        - name: postgresql-data
          mountPath: /var/lib/postgresql/data
          subPath: db
        env:
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: password
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: username
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: db-config
              key: db.name
        - name: PGDATA
          value: /var/lib/postgresql/data/db
  volumeClaimTemplates:
  - metadata:
      name: postgresql-data
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: "do-block-storage-retain"
      resources:
        requests:
          storage: 1Gi
  